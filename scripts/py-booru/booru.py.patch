--- /home/alt/git-repo/script-python3/downloader-booru/booru.py	2020-11-28 15:51:58.711897833 +0900
+++ booru.py	2021-02-16 15:31:03.305498307 +0900
@@ -57,17 +57,14 @@
         )
         return False
 
-def wrapper_prerun(download_table, path_save_current, path_save_old=None):
+def wrapper_prerun(download_table, path_save_current, **options):
     global mech_database
+    path_save_old = options.get('old_path', None)
     # print ('DEBUG', path_save_current)
     MkDirP(path_save_current, old=path_save_old)
     if mech_database is not None:
-        mech_database.run(
-            mode='create table', 
-            table=download_table, 
-            view='VARCHAR(32) PRIMARY KEY', 
-            save='TEXT NOT NULL'
-        )
+        mech_database.flush()
+        mech_database.create_table(table=download_table, view='VARCHAR(32) PRIMARY KEY', save='TEXT NOT NULL')
     else:
         pass
 
@@ -131,12 +128,7 @@
                     view_url, dlpost_returns['success']
                 )
                 if mech_database is not None:
-                    mech_database.run(
-                        mode='insert row', 
-                        table=table_name, 
-                        view=view_id,
-                        save=image_saveas
-                    )
+                    mech_database.insert_into(table=table_name, view=view_id, save=image_saveas)
                 else:
                     pass
                 dlpost_returns['ok'] = True
@@ -194,7 +186,6 @@
     }
     landing_page = index_page.get_landing(page_url)
     current_page = page_url
-    downloaded_indexes = set([])
     if not landing_page.code404 or landing_page.vcount > 0:
         # CHECK LAZY
         if console_args.lazy:
@@ -235,12 +226,13 @@
         else:
             lazy_finish = False
         # print ('Lazy:', lazy_finish)
+        downloaded_indexes = set([])
         if not lazy_finish:
             while current_page is not None:
                 if current_page == page_url:
                     current_page_obj = landing_page
                 else:
-                    current_page_obj = index_page.get_views(current_page)
+                    current_page_obj = index_page.get_views(current_page, ingnores=downloaded_indexes)
                 download_returns['total'] += current_page_obj.vcount
                 my_printer('info', 
                     'INDEX [CHCK] - Url: "%s" (%s Imgs)', 
